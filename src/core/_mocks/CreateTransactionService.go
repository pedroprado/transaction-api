// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entity "pedroprado.transaction.api/src/core/domain/entity"
)

// CreateTransactionService is an autogenerated mock type for the CreateTransactionService type
type CreateTransactionService struct {
	mock.Mock
}

// Create provides a mock function with given fields: transaction
func (_m *CreateTransactionService) Create(transaction entity.Transaction) (*entity.Transaction, error) {
	ret := _m.Called(transaction)

	var r0 *entity.Transaction
	if rf, ok := ret.Get(0).(func(entity.Transaction) *entity.Transaction); ok {
		r0 = rf(transaction)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entity.Transaction) error); ok {
		r1 = rf(transaction)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreateTransactionService interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateTransactionService creates a new instance of CreateTransactionService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateTransactionService(t mockConstructorTestingTNewCreateTransactionService) *CreateTransactionService {
	mock := &CreateTransactionService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
