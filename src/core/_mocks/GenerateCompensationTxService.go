// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	_interfaces "pedroprado.transaction.api/src/core/_interfaces"
)

// GenerateCompensationTxService is an autogenerated mock type for the GenerateCompensationTxService type
type GenerateCompensationTxService struct {
	mock.Mock
}

// Generate provides a mock function with given fields: transactionID, transactionStatusRepoTx, balanceProvisionRepoTx
func (_m *GenerateCompensationTxService) Generate(transactionID string, transactionStatusRepoTx _interfaces.TransactionStatusRepository, balanceProvisionRepoTx _interfaces.BalanceProvisionRepository) error {
	ret := _m.Called(transactionID, transactionStatusRepoTx, balanceProvisionRepoTx)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, _interfaces.TransactionStatusRepository, _interfaces.BalanceProvisionRepository) error); ok {
		r0 = rf(transactionID, transactionStatusRepoTx, balanceProvisionRepoTx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGenerateCompensationTxService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGenerateCompensationTxService creates a new instance of GenerateCompensationTxService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGenerateCompensationTxService(t mockConstructorTestingTNewGenerateCompensationTxService) *GenerateCompensationTxService {
	mock := &GenerateCompensationTxService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
